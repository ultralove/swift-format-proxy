name: Swift CI

on:
    push:
        branches:
            - main
            - 'feature/**'
    pull_request:
        branches:
            - main
            - 'feature/**'

jobs:
    build:
        strategy:
            matrix:
                os: [macos-latest, ubuntu-latest]
                swift-version: ['5.9', '5.10', '6.0', '6.1']

        runs-on: ${{ matrix.os }}

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Swift
              uses: swift-actions/setup-swift@v2
              with:
                  swift-version: ${{ matrix.swift-version }}

            - name: Display Swift version
              run: swift --version

            - name: Display system info
              run: |
                  if [[ "${{ matrix.os }}" == "macos-latest" ]]; then
                    xcode-select --print-path
                    uname -m
                  else
                    uname -a
                  fi

            - name: Cache Swift packages
              uses: actions/cache@v4
              with:
                  path: .build
                  key: ${{ runner.os }}-swift-${{ matrix.swift-version }}-${{ hashFiles('Package.swift', 'Package.resolved') }}
                  restore-keys: |
                      ${{ runner.os }}-swift-${{ matrix.swift-version }}-
                      ${{ runner.os }}-swift-

            - name: Build Debug
              run: swift build --verbose

            - name: Build Release
              run: swift build -c release --verbose

    build-universal-macos:
        runs-on: macos-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Swift
              uses: swift-actions/setup-swift@v2
              with:
                  swift-version: '6.1'

            - name: Display Swift version
              run: swift --version

            - name: Display system info
              run: |
                  xcode-select --print-path
                  uname -m

            - name: Cache Swift packages
              uses: actions/cache@v4
              with:
                  path: .build
                  key: universal-macos-swift-6.1-${{ hashFiles('Package.swift', 'Package.resolved') }}
                  restore-keys: |
                      universal-macos-swift-6.1-
                      universal-macos-swift-

            - name: Build Universal Binary (x86_64)
              run: swift build -c release --arch x86_64

            - name: Build Universal Binary (arm64)
              run: swift build -c release --arch arm64

            - name: Create Universal Binary
              run: |
                  mkdir -p .build/universal
                  lipo -create \
                    .build/x86_64-apple-macosx/release/swift-format-proxy \
                    .build/arm64-apple-macosx/release/swift-format-proxy \
                    -output .build/universal/swift-format-proxy

            - name: Verify Universal Binary
              run: |
                  file .build/universal/swift-format-proxy
                  lipo -info .build/universal/swift-format-proxy

            - name: Upload Universal Binary
              uses: actions/upload-artifact@v4
              with:
                  name: swift-format-proxy-universal-macos
                  path: .build/universal/swift-format-proxy
                  retention-days: 30
