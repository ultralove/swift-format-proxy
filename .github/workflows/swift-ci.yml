name: Swift CI

on:
  push:
    branches:
      - main
      - 'feature/**'
  pull_request:
    branches:
      - main
      - 'feature/**'

jobs:
  test:
    runs-on: macos-latest

    strategy:
      matrix:
        swift-version: ['5.9', '5.10', '6.0', '6.1']

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Swift
        uses: swift-actions/setup-swift@v2
        with:
          swift-version: ${{ matrix.swift-version }}

      - name: Display Swift version
        run: swift --version

      - name: Display Xcode version
        run: xcode-select --print-path && xcrun swift --version

      - name: Cache Swift packages
        uses: actions/cache@v4
        with:
          path: .build
          key: ${{ runner.os }}-swift-${{ matrix.swift-version }}-${{ hashFiles('Package.swift', 'Package.resolved') }}
          restore-keys: |
            ${{ runner.os }}-swift-${{ matrix.swift-version }}-
            ${{ runner.os }}-swift-

      - name: Build
        run: swift build --verbose

      - name: Build Release
        run: swift build -c release --verbose

      - name: Test swift-format availability
        run: |
          if xcrun swift-format --version; then
            echo "✅ swift-format is available via xcrun"
          else
            echo "❌ swift-format is not available via xcrun"
            exit 1
          fi

      - name: Test executable
        run: |
          .build/release/swift-format-proxy --help || echo "Help command completed with exit code $?"

      - name: Test with non-existent directory
        run: |
          cd /tmp
          mkdir -p test-swift-project
          cd test-swift-project
          if ${{ github.workspace }}/.build/release/swift-format-proxy 2>&1 | grep -q "No 'Sources/' or 'Tests/' directory found"; then
            echo "✅ Correctly detected missing directories"
          else
            echo "❌ Failed to detect missing directories"
            exit 1
          fi

      - name: Test with mock Swift project
        run: |
          cd /tmp
          mkdir -p test-swift-project-with-sources/{Sources,Tests}
          echo 'print("Hello, World!")' > test-swift-project-with-sources/Sources/main.swift
          echo 'import XCTest' > test-swift-project-with-sources/Tests/TestFile.swift
          cd test-swift-project-with-sources
          echo "Testing with mock project structure:"
          ls -la
          # Run the proxy (it should work but may fail due to swift-format not finding proper Swift files)
          ${{ github.workspace }}/.build/release/swift-format-proxy --help || echo "Command completed"

  lint:
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Swift
        uses: swift-actions/setup-swift@v2
        with:
          swift-version: '6.1'

      - name: Swift Format Check
        run: |
          if xcrun swift-format --version; then
            xcrun swift-format format --diff Sources/
          else
            echo "swift-format not available, skipping format check"
          fi

      - name: SwiftLint
        if: false # Disable SwiftLint for now since it's not installed by default
        run: |
          if which swiftlint >/dev/null; then
            swiftlint
          else
            echo "SwiftLint not available, skipping lint check"
          fi
